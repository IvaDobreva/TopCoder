.account-info-container
  .settings-section.credentials
    .section-info
      h2 Credentials
      .description Used to log in to your account and cannot be edited. Please contact support@topcoder.com if you need to make changes.

    .section-fields
      .form-label.username Username
      input.form-field.grey(name="username", value="{{vm.userData.handle}}", disabled=true)

      .form-label Email
      input.form-field.grey(name="email", value="{{vm.userData.email}}", disabled=true)

      div(ng-if="!vm.isSocialRegistrant && !vm.loading")
        form(name="vm.newPasswordForm", role="form", ng-submit="vm.newPasswordForm.$valid && vm.submitNewPassword()", novalidate)
          .form-label Current password

          .validation-bar(ng-class="{ 'error-bar': (vm.newPasswordForm.currentPassword.$dirty && vm.newPasswordForm.currentPassword.$invalid) }")
            toggle-password.topcoder-input.password(ng-model="vm.currentPassword")

            .form-input-error(ng-show="vm.newPasswordForm.currentPassword.$dirty && vm.newPasswordForm.currentPassword.$invalid")
              p(ng-show="vm.newPasswordForm.currentPassword.$error.required") This is a required field.

              p(ng-show="vm.newPasswordForm.currentPassword.$error.incorrect") Your current password is incorrect. Please check that you entered the right one.

          .form-label New Password

          .validation-bar
            toggle-password-with-tips.topcoder-input.password(placeholder="Create new password")

            .tips.password-tips(ng-show="vm.passwordFocus")
              .arrow

              //- h3 Password Tips:

              H3 Your password must have:

              p(ng-class="{ 'has-length-between-range': (vm.newPasswordForm.password.$dirty && !vm.newPasswordForm.password.$error.minlength && !vm.newPasswordForm.password.$error.maxlength && !vm.newPasswordForm.password.$error.required) }") At least 8 characters

              p(ng-class="{ 'has-letter': (vm.newPasswordForm.password.$dirty && !vm.newPasswordForm.password.$error.hasLetter) }") At least one letter

              p(ng-class="{ 'has-symbol-or-number': (vm.newPasswordForm.password.$dirty && !vm.newPasswordForm.password.$error.hasSymbolOrNumber) }") At least one number or symbol

          .button-container
            button.tc-btn.save(type="submit", tc-busy-button, tc-busy-when="vm.formProcessing.newPasswordForm", ng-disabled="vm.newPasswordForm.$invalid || vm.newPasswordForm.$pristine", ng-class="{'disabled': vm.newPasswordForm.$invalid || vm.newPasswordForm.$pristine}") Change Password


      div(ng-if="vm.isSocialRegistrant && !vm.loading")
        p You joined Topcoder by using an external account, so we don't have a password for you.

  form(name="vm.accountInfoForm", role="form", novalidate, autocomplete="off")
    .settings-section.name
      .section-info
        h2  Name

        .description Required for legal purposes; will be kept private and not shared with anyone.

      .section-fields
        // Stops Chrome from autofilling and autocompleting (along with autocomplete="off" on the form)
        input(autocomplete="false", name="hidden", type="text", style="display:none;")

        .form-label.first First name 
          span(style="text-transform: none;") &nbsp;(Given name)

          span.mandatory *mandatory
        .validation-bar(ng-class="{ 'error-bar': (vm.accountInfoForm.$dirty && vm.accountInfoForm.firstname.$invalid), 'success-bar': (vm.accountInfoForm.$dirty && vm.accountInfoForm.firstname.$valid)}")
          input.topcoder-input(
            name="firstname", type="text",
            placeholder="First",
            ng-model="vm.userData.firstName", 
            maxlength="64", required, 
            ng-class="{'form-field-focused': hasFocus==true}"
          )
          .form-input-error(ng-show="vm.accountInfoForm.firstname.$invalid")
            p(ng-show="vm.accountInfoForm.firstname.$error.required") This is a required field.

        .form-label Last name
          span(style="text-transform: none;") &nbsp;(Surname)
          span.mandatory *mandatory
        .validation-bar(ng-class="{ 'error-bar': (vm.accountInfoForm.$dirty && vm.accountInfoForm.lastname.$invalid), 'success-bar': (vm.accountInfoForm.$dirty && vm.accountInfoForm.lastname.$valid)}")
          input.topcoder-input(
            name="lastname", type="text", 
            placeholder="Last",
            ng-model="vm.userData.lastName", 
            maxlength="64", required,
            ng-class="{'form-field-focused': hasFocus==true}"
          )
          .form-input-error(ng-show="vm.accountInfoForm.lastname.$invalid")
            p(ng-show="vm.accountInfoForm.lastname.$error.required") This is a required field.

    .settings-section.address
      .section-info
        h2  address
        .description Required for payments and in case we need to mail you something. Will be kept private and not shared with anyone.

      .section-fields
          .form-label.address Address
          input.topcoder-input(
            name="address", type="text",
            placeholder="123 Topcoder Ave.",
            value="{{vm.homeAddress.streetAddr1}}",
            ng-model="vm.homeAddress.streetAddr1",
            ng-class="{'form-field-focused': hasFocus==true}"
          )

          .form-label Address 2
            span(style="text-transform: none;") &nbsp;(apt., suite, etc.)
          input.topcoder-input(
            name="address2",
            type="text",
            placeholder="Suite 42",
            value="{{vm.homeAddress.streetAddr2}}",
            ng-model="vm.homeAddress.streetAddr2",
            ng-class="{'form-field-focused': hasFocus==true}"
          )

          .form-label City
          input.topcoder-input(
            name="city", type="text",
            value="{{vm.homeAddress.city}}",
            placeholder="Best City in the World",
            ng-model="vm.homeAddress.city",
            ng-class="{'form-field-focused': hasFocus==true}"
          )

          .form-label State/Province
          input.topcoder-input(
            name="state", type="text",
            value="{{vm.homeAddress.stateCode}}",
            placeholder="California",
            ng-model="vm.homeAddress.stateCode",
            ng-class="{'form-field-focused': hasFocus==true}"
          )

          .form-label Zip/Post Code
          input.topcoder-input(
            name="zipcode", type="text",
            placeholder="Zip"
            value="{{vm.homeAddress.zip}}",
            ng-model="vm.homeAddress.zip",
            ng-class="{'form-field-focused': hasFocus==true}"
          )

          .form-label
            span Country
            span.mandatory *mandatory
          angucomplete-alt(
            input-name="country",
            input-class="tc-input",
            pause="100",
            selected-object="vm.updateCountry",
            local-data="vm.countries",
            initial-value="vm.countryObj",
            search-fields="name",
            title-field="name",
            match-class="angucomplete-highlight",
            minlength="1",
            ng-class="{'form-field-focused': hasFocus==true}"
          )
          .account-info-error(ng-show="vm.accountInfoForm.country.$dirty")
            p(ng-show="!vm.isValidCountry") Please choose a country from the list.


  .save-section
    button.save.tc-btn.tc-btn-wide(type="submit", tc-busy-button, tc-busy-when="vm.formProcessing.accountInfoForm", ng-disabled="vm.accountInfoForm.$invalid || vm.accountInfoForm.$pristine", ng-class="{'enabled-button': vm.accountInfoForm.$valid}", ng-click="vm.accountInfoForm.$valid && vm.accountInfoForm.$dirty && vm.saveAccountInfo()") Save
